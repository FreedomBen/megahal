#!/usr/bin/env ruby

require 'megahal'
require 'highline/import'
require 'hodel_3000_compliant_logger'

say(<<-EOS)
+----------------------------------------------------------+
|                                                          |
|  #    #  ######   ####     ##    #    #    ##    #       |
|  ##  ##  #       #    #   #  #   #    #   #  #   #       |
|  # ## #  #####   #       #    #  ######  #    #  #       |
|  #    #  #       #  ###  ######  #    #  ######  #       |
|  #    #  #       #    #  #    #  #    #  #    #  #       |
|  #    #  ######   ####   #    #  #    #  #    #  ######  |
|                                                          |
|    Type "/help" for options and "/quit" to terminate.    |
+----------------------------------------------------------+

EOS

class MegaLog
  def initialize
    @logger = Hodel3000CompliantLogger.new("megahal.log")
    @logger.info "MegaHAL Started"
  end
  def exit
    @logger.info "MegaHAL Stopped"
  end
  def status(message)
    say("(#{message})")
    @logger.info "(#{message})"
  end
  def user(message)
    @logger.info "USER: #{message}"
  end
  def puts(message)
    say(message)
    @logger.info "MH10: #{message}"
  end
end

log = MegaLog.new

def list_menu(megahal, log)
  choose do |menu|
    menu.prompt = "? "
    menu.choice(:cancel) do
      log.status('cancelled')
      return
    end
    menu.choice(:default) do
      megahal.become(:default)
      log.status('brain changed to the original loebner prize version')
    end
    menu.choice(:aliens) do
      megahal.become(:aliens)
      log.status('brain changed to bishop from aliens')
    end
    menu.choice(:bill) do
      megahal.become(:bill)
      log.status('brain changed to bill gates')
    end
    menu.choice(:caitsith) do
      megahal.become(:caitsith)
      log.status('brain changed to cait sith from ffvii')
    end
    menu.choice(:ferris) do
      megahal.become(:ferris)
      log.status('brain changed to ferris bueller')
    end
    menu.choice(:manson) do
      megahal.become(:manson)
      log.status('brain changed to marylin manson')
    end
    menu.choice(:pepys) do
      megahal.become(:pepys)
      log.status('brain changed to samuel pepys')
    end
    menu.choice(:pulp) do
      megahal.become(:pulp)
      log.status('brain changed to marsellus wallace from pulp fiction')
    end
    menu.choice(:scream) do
      megahal.become(:scream)
      log.status('brain changed to randy from scream')
    end
    menu.choice(:sherlock) do
      megahal.become(:sherlock)
      log.status('brain changed to sherlock holmes')
    end
    menu.choice(:startrek) do
      megahal.become(:startrek)
      log.status('brain changed to data from star trek')
    end
    menu.choice(:starwars) do
      megahal.become(:starwars)
      log.status('brain changed to threepio from star wars')
    end
  end
  log.puts(megahal.reply(nil))
end

def help_menu(megahal, log)
  choose do |menu|
    menu.prompt = "? "
    menu.choice(:cancel) do
      log.status('cancelled')
      return
    end
    menu.choice(:reset) do
      megahal.clear
      log.status('brain cleared')
    end
    menu.choice(:brain) do
      log.status('show brain menu')
      list_menu(megahal, log)
    end
    menu.choice(:train) {}
    menu.choice(:load) {}
    menu.choice(:save) {}
    if megahal.characters
      menu.choice(:words) do
        megahal.characters = false
        log.status('use words instead of characters')
      end
    else
      menu.choice(:characters) do
        megahal.characters = true
        log.status('use characters instead of words')
      end
    end
    if megahal.learning
      menu.choice(:ignore) do
        megahal.learning = false
        log.status('stop learning from user input')
      end
    else
      menu.choice(:learn) do
        megahal.learning = true
        log.status('start learning from user input')
      end
    end
    menu.choice(:quit) do
      log.status('exiting')
      exit
    end
  end
end

megahal = MegaHAL.new
log.puts(megahal.reply(nil))
begin
  loop do
    input = ask("> ").strip
    log.user(input)
    if input.downcase =~ /^[\/\\#@](help|menu|info|list|h|\?)$/
      log.status('show help menu')
      help_menu(megahal, log)
    elsif input.downcase =~ /^[\/\\#@](quit|exit|q|x)$/
      log.status('exiting')
      exit
    else
      log.puts(megahal.reply(input))
    end
  end
ensure
  log.exit
end
