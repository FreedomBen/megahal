#!/usr/bin/env ruby

require 'byebug'
require 'megahal'
require 'highline/import'

say(<<-EOS)
+----------------------------------------------------------+
|                                                          |
|  #    #  ######   ####     ##    #    #    ##    #       |
|  ##  ##  #       #    #   #  #   #    #   #  #   #       |
|  # ## #  #####   #       #    #  ######  #    #  #       |
|  #    #  #       #  ###  ######  #    #  ######  #       |
|  #    #  #       #    #  #    #  #    #  #    #  #       |
|  #    #  ######   ####   #    #  #    #  #    #  ######  |
|                                                          |
|    Type "/help" for options and "/quit" to terminate.    |
+----------------------------------------------------------+

EOS

def list_menu(megahal)
  choose do |menu|
    menu.prompt = "? "
    menu.choice(:cancel) do
      say('(cancelled)')
      return
    end
    menu.choice(:default) { megahal.become(:default) }
    menu.choice(:aliens) { megahal.become(:aliens) }
    menu.choice(:bill) { megahal.become(:bill) }
    menu.choice(:caitsith) { megahal.become(:caitsith) }
    menu.choice(:ferris) { megahal.become(:ferris) }
    menu.choice(:manson) { megahal.become(:manson) }
    menu.choice(:pepys) { megahal.become(:pepys) }
    menu.choice(:pulp) { megahal.become(:pulp) }
    menu.choice(:scream) { megahal.become(:scream) }
    menu.choice(:sherlock) { megahal.become(:sherlock) }
    menu.choice(:startrek) { megahal.become(:startrek) }
    menu.choice(:starwars) { megahal.become(:starwars) }
  end
  say(megahal.reply(nil))
end

def help_menu(megahal)
  choose do |menu|
    menu.prompt = "? "
    menu.choice(:cancel) do
      say('(cancelled)')
      return
    end
    menu.choice(:reset) do
      megahal.clear
      say('(brain cleared)')
    end
    menu.choice(:brain) do
      list_menu(megahal)
    end
    menu.choice(:train) {}
    menu.choice(:load) {}
    menu.choice(:save) {}
    if megahal.characters
      menu.choice(:words) do
        megahal.characters = false
        say('(using words)')
      end
    else
      menu.choice(:characters) do
        megahal.characters = true
        say('(using characters)')
      end
    end
    if megahal.learning
      menu.choice(:ignore) do
        megahal.learning = false
        say('(stopped learning from user input)')
      end
    else
      menu.choice(:learn) do
        megahal.learning = true
        say('(started learning from user input)')
      end
    end
    menu.choice(:quit) { exit }
  end
end

megahal = MegaHAL.new
say(megahal.reply(nil))
loop do
  input = ask("> ")
  if input.strip.downcase =~ /^[\/\\#@](help|menu|info|command)/
    help_menu(megahal)
  elsif input.strip.downcase =~ /^[\/\\#@](quit|exit)/
    exit
  else
    say(megahal.reply(input))
  end
end
