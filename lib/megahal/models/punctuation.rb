module MegaHAL

  module Model

    # TODO: filter predictor works on significant punc characters exclusively.
    # So use insert model to get distibutions, then look at all possible
    # generations, and discard ones that are illegal wrt the filter model, then
    # score remaining ones based on a markov model, and select the most likely.

    # This model learns how to insert punctuation between IDs of a novel
    # sequence of norms that has been generated by a model. It uses two
    # predictors to achieve this; an insert predictor is used to determine
    # a distribution of puncs between each norm pair, while a filter predictor
    # is used to make sure that the sequence of puncs is likely to be correct.
    class Punctuation < Base

      def initialize
        @_insert = Predictor::Insert.new
      end

      def learn(puncs, norms)
        @_insert.observe(puncs, norms)
      end

      def generate(norms)
        @_insert.generate(norms)
      end

    end

  end

end
